#General application configurations.
server.port=3000

logging.level.org.springframework.web.client.RestTemplate=DEBUG
logging.level.org.springframework.security=DEBUG

server.error.include-exception=true
server.error.include-stacktrace=always

#Login oauth2 setup, below configurations are used to perform authorizations against a role
spring.security.oauth2.client.registration.keycloak.client-id=loki-babak-test
spring.security.oauth2.client.registration.keycloak.client-secret=Irx3b0SRG9zZ4oqr8Q1IzkfdZIi9vrOh
spring.security.oauth2.client.registration.keycloak.scope=openid
spring.security.oauth2.client.registration.keycloak.redirect-uri=http://localhost:3000/home

#provider URLs,
# Following configurations can be found at the keycloak end point - http://localhost:8080/realms/keycloak-role-rest-auth-setup/.well-known/openid-configuration
spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:8080/realms/keycloak-role-rest-auth-setup
spring.security.oauth2.client.provider.keycloak.authorization-uri=http://localhost:8080/realms/keycloak-role-rest-auth-setup/protocol/openid-connect/auth
spring.security.oauth2.client.provider.keycloak.token-uri=http://localhost:8080/realms/keycloak-role-rest-auth-setup/protocol/openid-connect/token
spring.security.oauth2.client.provider.keycloak.user-info-uri=http://localhost:8080/realms/keycloak-role-rest-auth-setup/protocol/openid-connect/userinfo
spring.security.oauth2.client.provider.keycloak.jwk-set-uri=http://localhost:8080/realms/keycloak-role-rest-auth-setup/protocol/openid-connect/certs


#Below configurations for the keycloak admin cli library to do rest operations on keycloak.
# These configurations are to perform the actual rest api communication with the keycloak instance so that we can respond to the actual clients of the service.
keycloak.realm=keycloak-role-rest-auth-setup
keycloak.clientId=loki-babak-test
keycloak.credentials.secret=Irx3b0SRG9zZ4oqr8Q1IzkfdZIi9vrOh
keycloak.auth-server-url=http://localhost:8080